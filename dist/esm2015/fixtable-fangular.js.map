{
  "version": 3,
  "file": "fixtable-fangular.js",
  "sources": [
    "ng://fixtable-fangular/out/app/modules/fixtable/fixtable.module.ts",
    "ng://fixtable-fangular/out/app/modules/fixtable/column-header/column-header.component.ts",
    "ng://fixtable-fangular/out/app/modules/fixtable/grid/grid.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GridComponent } from './grid/grid.component';\nimport { ColumnHeaderComponent } from \"./column-header/column-header.component\";\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    GridComponent,\n    ColumnHeaderComponent\n  ],\n  exports: [\n    GridComponent\n  ]\n})\nexport class FixtableModule { }\n",
    "import {Component, Input, OnInit} from '@angular/core';\n\nimport {ColumnDef} from '../grid/grid.component';\n\n@Component({\n  selector: 'fixtable-column-header',\n  template: `<th *ngIf=\"!columnDef.sortable\">\n  {{columnDef.header || columnDef.key}}\n</th>\n<th *ngIf=\"columnDef.sortable\">\n  <div (click)=\"SortByMyKey()\">\n    {{columnDef.header || columnDef.key}}\n  </div>\n</th>\n`,\n  styles: [``]\n})\nexport class ColumnHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() columnDef: ColumnDef;\n  @Input() SortByKey: (key: string) => void;\n  @Input() sortBy: string;\n  @Input() ascending: boolean;\n\n  SortByMyKey() {\n    this.SortByKey(this.columnDef.key);\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import {Component, Input, OnInit} from '@angular/core';\nimport {ColumnHeaderComponent} from '../column-header/column-header.component';\nimport * as _ from 'lodash';\n\nexport interface ColumnDef {\n  key: string;\n  header?: string;\n  width?: number;\n  sortable?: boolean;\n  sortCompareMethod?: (a, b) => number;\n  hideLabel?: boolean;\n  cellClass?: string;\n  component?: string;\n}\n\nexport interface FixtableOptions {\n  data: any[]; // For now, pass in the data array. This is different than the original signature in fixtable-angular\n               // but makes more sense with the Angular2 programming model\n  columns: ColumnDef[];\n  tableClass?: string;\n  loading: string;\n}\n\n\n@Component({\n  selector: 'fixtable-grid',\n  template: `<div *ngIf=\"externalFilter\">\n  <input ngModel=\"externalFilter\" />\n</div>\n<table>\n  <th *ngFor=\"let columnDef of columns\">\n    <fixtable-column-header [SortByKey]=\"SortByKey\" [columnDef]=\"columnDef\"></fixtable-column-header>\n  </th>\n  <tr *ngFor=\"let record of data\">\n    <td *ngFor=\"let columnDef of columns\">\n      <div>{{record[columnDef.key]}}</div>\n    </td>\n  </tr>\n</table>\n`,\n  styles: [``]\n})\nexport class GridComponent implements OnInit {\n\n  // Options params\n  data;\n  columns;\n  externalFilter;\n\n  @Input() options: FixtableOptions;\n\n  constructor() {\n  }\n\n\n\n  private ascending = true;\n\n  SortByKey = ((key: string) => {\n    let defaultSortCompareMethod = (a, b) => a[key] > b[key];\n\n    // Switch to a custom comparator later\n    let sortCompareMethod = defaultSortCompareMethod;\n\n    if (this.ascending) {\n      this.data.sort(sortCompareMethod);\n    } else {\n      this.data.sort((a, b) => !sortCompareMethod(a, b));\n    }\n    this.ascending = !this.ascending;\n  });\n\n  ngOnInit() {\n    this.data = this.options.data;\n    this.columns = this.options.columns;\n    this.externalFilter = this.options.columns;\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": ";;;;;;;AEAA;;;;;;;;AA0CA,MAAA,aAAA,CAAA;IASE,WAAF,GAAA;QAKA,IAAA,CAAA,SAAA,GAAsB,IAAI,CAA1B;QAEA,IAAA,CAAA,SAAA,IAAe,CAAC,GAAW,KAA3B;YACI,qBAAI,wBAAwB,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;YAGzD,qBAAI,iBAAiB,GAAG,wBAAwB,CAAC;YAEjD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;SAClC,CAAC,CAAJ;KAlBG;;;;IAoBD,QAAQ,GAAV;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;KAC5C;;;IApDH,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,CAAZ;;;;;;;;;;;;;AAaA,CAAC;gBACC,MAAM,EAAE,CAAC,CAAX,CAAa,CAAC;aACb,EAAD,EAAA;;;;;IAQA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;;;;;;;ADjDA,AAiBA,MAAA,qBAAA,CAAA;IAEE,WAAF,GAAA,GAAmB;;;;IAOjB,WAAW,GAAb;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KACpC;;;;IAED,QAAQ,GAAV;KACG;;;IA3BH,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE,CAAZ;;;;;;;;AAQA,CAAC;gBACC,MAAM,EAAE,CAAC,CAAX,CAAa,CAAC;aACb,EAAD,EAAA;;;;;IAKA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;;;;;;;ADxBA,AAiBA,MAAA,cAAA,CAAA;;;IAZA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,YAAY,EAAE;oBACZ,aAAa;oBACb,qBAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,aAAa;iBACd;aACF,EAAD,EAAA;;;;;;;;;;;;;;;;;;"
}
